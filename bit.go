
// 位运算
/*
	在计算机内部，计算都是以二进制的方式来运算的

	原码、反码、补码

		1.二进制的最高位是符号位：0表示正数，1表示负数
			1 -> [0000 0001]	-1 -> [1000 0001]

		2.正数的原码，反码，补码都一样
			原码：1 -> [0000 0001]
			反码：1 -> [0000 0001]
			补码：1 -> [0000 0001]

		3.负数的反码=它的原码符号位不变，其他位取反（0 -> 1,1 -> 0）
			原码：-1 -> [1000 0001]
			反码：-1 -> [1111 1110]

		4.负数的补码=它的反码+1
			反码：-1 -> [1111 1111]

		5.0的反码，补码都是0

		6.在计算机运算的时候，都是以补码的方式来运算的
		
	位运算
		按位与 &
			两位全为1，结果为1，否则为0
			2的补码：0000 0010
			3的补码：0000 0011
			2&3 =	0000 0010

		按位或 |
			两位有一个为1，结果为1，否则为0
			2的补码：0000 0010
			3的补码：0000 0011
			2|3 =	0000 0011

		按位异或 ^
			两位一个为0，一个为1，结果为1，否则为0
			2的补码：0000 0010
			3的补码：0000 0011
			2^3 =	0000 0001

			-2的补码：1111 1110
			2的补码： 0000 0010
			-2^2 =	 1111 1100

	移位运算
		右移>>
			低位溢出，符号位不变，并用符号位补溢出的高位
			1>>2 = 0
			0000 0001 -> 0000 0000

		左移<<
			符号位不变，低位补0
			1<<2 = 4
			0000 0001 -> 0000 0100 
*/	