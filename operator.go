
// 运算符
/*
	1.算术运算符
		对数值型的
		+	正号 			+3
		- 	负号 			-4
		+ 	加   		 5 + 5
		- 	减			 6 - 4
		* 	乘			 3 * 4
		/ 	除			 5 / 5
		% 	取模/取余      7 % 5  取模公式：a - a / b * b
		++ 	自增			a = 2 a++
		-- 	自减			a = 2 a--
		+ 	字符串相加	 "He" + "llo"

		细节：
			1）Go的自增自减只能当作一个独立语句使用时，不能这样使用b := a++ 或者 b := a--

			2）Go的++和--只能写在变量后面a++、a--，没有前++和前--，++a、--a

	2.赋值运算符
		1）就是将某个运算后的值，赋给指定的变量
		2）赋值运算符左边必须是变量，右边可以是变量、表达式、常量值；表达式：任何有值都可以看作表达式
		=	简单的赋值运算符，将右值赋给左值	C = A + B
		+=	相加后再赋值						C += A 等于 C = C + A
		-=	相减后再赋值						C -= A 等于 C = C - A
		*=	相乘后再赋值						C *= A 等于 C = C * A
		/=	相除后再赋值						C /= A 等于 C = C / A
		%=	取模后再赋值						C %= A 等于 C = C % A

	3.比较运算符/关系运算符
		结果都是bool型，要么为true，要么为false
		关系表达式经常用在if结构的条件中或循环结构的条件中
		比较运算符"=="不能误写成"="

	4.逻辑运算符
		&&	逻辑与  第一个条件为假，则第二个条件不会判断，最终结果为false
		||	逻辑或  第一个条件为真，则第二个条件不会判断，最终结果为true
		！  逻辑非

	5.位运算符

	6.其它运算符

	7.运算符优先级
		后缀	() [] -> . ++ --
		单目	+ - ！(type) * & sizeof
		乘法	* / %
		加法	+ -
		移位	<< >>
		关系	< <= > >=
		相等	== !=
		按位与	&
		按位异或 ^
		按位或	|
		逻辑与	&&
		逻辑或 ||
		赋值	= += -= *= /= %= > >= < <= &= ^= |=
		逗号	，

		只有单目运算符、赋值运算符是从右向左运算的。
*/